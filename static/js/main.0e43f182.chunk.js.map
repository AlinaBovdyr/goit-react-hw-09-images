{"version":3,"sources":["components/Modal/Modal.module.css","components/ErrorView/ErrorView.module.css","components/InitialView/InitialView.module.css","components/Button/Button.module.css","components/Loader/Loader.module.css","components/Searchbar/Searchbar.js","services/searchImgApi.js","components/InitialView/InitialView.js","components/ErrorView/error.jpeg","components/ErrorView/ErrorView.js","components/ImageGallery/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Loader/Loader.js","components/Modal/Modal.js","components/Views/ImageInfo.js","App.js","index.js","components/Searchbar/Searchbar.module.css","components/ImageGallery/ImageGallery.module.css"],"names":["module","exports","Searchbar","state","searchQuery","page","handleInputChange","event","value","target","setState","handleSubmit","preventDefault","trim","toast","error","props","onSubmit","this","className","s","SearchForm","type","button","buttonLabel","SearchInput","autoComplete","autoFocus","placeholder","onChange","Component","BASE_URL","KEY","api","fetchImage","searchImg","searchParams","URLSearchParams","q","image_type","orientation","per_page","key","url","fetch","then","response","ok","json","Promise","reject","Error","InitialView","text","ErrorView","errorImg","src","errorImage","alt","errorMessage","ImageGalleryItem","largeImageURL","description","onImgClick","GalleryItem","data-source","GalleryItemImage","onClick","e","currentTarget","ImageGallery","hits","map","id","webformatURL","tags","Button","onBtnClick","LoaderImg","loader","color","height","width","timeout","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","window","addEventListener","removeEventListener","largeImgUrl","imgAlt","createPortal","overlay","modal","image","ImageInfo","images","status","showBtn","loading","showModal","URL","ALT","fetchImages","currentQuery","query","currentPage","imageAPI","length","prevState","catch","finally","toggleModal","handleImgClick","img","dataset","source","prevProps","clientHeight","snapshot","scrollTo","top","behavior","Loader","message","App","handleFormSubmit","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0e43f182.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__mPBGH\",\"modal\":\"Modal_modal__1cJ3i\",\"image\":\"Modal_image__XidPK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorMessage\":\"ErrorView_errorMessage__18AlQ\",\"errorImg\":\"ErrorView_errorImg__3c1QF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"InitialView_text__38yqg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__206U4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__3hoML\"};","import React, { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport s from './Searchbar.module.css';\n\nexport default class Searchbar extends Component {\n  state = {\n    searchQuery: '',\n    page: 0,\n  };\n\n  handleInputChange = event => {\n    const { value } = event.target;\n\n    this.setState({\n      searchQuery: value,\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { searchQuery } = this.state;\n\n    if (searchQuery.trim() === '') {\n      return toast.error('Please, enter your search query!');\n    }\n\n    this.props.onSubmit(searchQuery);\n\n    this.setState({\n      searchQuery: '',\n    });\n  };\n\n  render() {\n    const { searchQuery } = this.state;\n    return (\n      <header className={s.Searchbar}>\n        <form className={s.SearchForm} onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className={s.button}>\n            <span className={s.buttonLabel}>Search</span>\n          </button>\n\n          <input\n            className={s.SearchInput}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={searchQuery}\n            onChange={this.handleInputChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n","// https://pixabay.com/api/?q=что_искать&page=номер_страницы&key=твой_ключ&image_type=photo&orientation=horizontal&per_page=12\n\nconst BASE_URL = 'https://pixabay.com/api/';\nconst KEY = '19151711-be14d41e7a0bdcd70a93cb54b';\n\nfunction fetchImage(searchImg, page = 0) {\n  const searchParams = new URLSearchParams({\n    q: searchImg,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    page: page,\n    per_page: 12,\n    key: KEY,\n  });\n\n  const url = `${BASE_URL}?${searchParams}`;\n\n  return fetch(url).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject(\n      new Error(`Bad search query :( We have no ${searchImg} images`),\n    );\n  });\n}\n\nconst api = { fetchImage };\nexport default api;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './InitialView.module.css';\n\nconst InitialView = ({ text }) => {\n  return <p className={s.text}>{text}</p>;\n};\n\nInitialView.propTypes = {\n  text: PropTypes.string,\n};\n\nexport default InitialView;\n","export default __webpack_public_path__ + \"static/media/error.68e486b0.jpeg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport errorImage from './error.jpeg';\nimport s from './ErrorView.module.css';\n\nconst ErrorView = ({ text }) => {\n  return (\n    <>\n      <img className={s.errorImg} src={errorImage} alt=\"sadcat\" />\n      <p className={s.errorMessage}>{text}</p>\n    </>\n  );\n};\n\nErrorView.propTypes = {\n  text: PropTypes.string,\n};\n\nexport default ErrorView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ImageGallery.module.css';\n\nconst ImageGalleryItem = ({ url, largeImageURL, description, onImgClick }) => {\n  return (\n    <li className={s.GalleryItem}>\n      <img\n        src={url}\n        data-source={largeImageURL}\n        alt={description}\n        className={s.GalleryItemImage}\n        onClick={e => onImgClick(e.currentTarget)}\n      />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  url: PropTypes.string,\n  largeImageURL: PropTypes.string,\n  description: PropTypes.string,\n  onImgClick: PropTypes.func,\n};\n\nexport default ImageGalleryItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImageGalleryItem from './ImageGalleryItem';\nimport s from './ImageGallery.module.css';\n\nconst ImageGallery = ({ hits, onClick }) => {\n  return (\n    <ul className={s.ImageGallery}>\n      {hits.map(({ id, webformatURL, largeImageURL, tags }) => {\n        return (\n          <ImageGalleryItem\n            key={id}\n            url={webformatURL}\n            largeImageURL={largeImageURL}\n            description={tags}\n            onImgClick={onClick}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nImageGallery.propTypes = {\n  hits: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default ImageGallery;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nconst Button = ({ onBtnClick }) => {\n  return (\n    <button type=\"button\" className={s.Button} onClick={onBtnClick}>\n      Load more\n    </button>\n  );\n};\n\nButton.propTypes = {\n  onBtnClick: PropTypes.func,\n};\n\nexport default Button;\n","import React from 'react';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Loader from 'react-loader-spinner';\nimport s from './Loader.module.css';\n\nconst LoaderImg = () => {\n  return (\n    <Loader\n      className={s.loader}\n      type=\"ThreeDots\"\n      color=\"#b53f97\"\n      height={100}\n      width={200}\n      timeout={3000}\n    />\n  );\n};\n\nexport default LoaderImg;\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const { largeImgUrl, imgAlt } = this.props;\n\n    return createPortal(\n      <div className={s.overlay} onClick={this.handleBackdropClick}>\n        <div className={s.modal}>\n          <img className={s.image} src={largeImgUrl} alt={imgAlt} />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport imageAPI from '../../services/searchImgApi';\nimport InitialView from '../InitialView';\nimport ErrorView from '../ErrorView';\nimport ImageGallery from '../ImageGallery';\nimport Button from '../Button';\nimport LoaderImg from '../Loader';\nimport Modal from '../Modal';\n\nexport default class ImageInfo extends Component {\n  state = {\n    images: [],\n    status: 'idle',\n    error: null,\n    page: 1,\n    showBtn: true,\n    loading: false,\n    showModal: false,\n    URL: '',\n    ALT: '',\n  };\n\n  getSnapshotBeforeUpdate(prevProps, prevState) {\n    const prevImages = prevState.images;\n\n    if (prevImages.length > 0) {\n      const listRef = document.querySelector('ul');\n      return listRef.clientHeight;\n    }\n\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const prevQuery = prevProps.query;\n    const currentQuery = this.props.query;\n\n    if (prevQuery !== currentQuery) {\n      prevState.page = 1;\n      this.setState({\n        status: 'pending',\n        images: [],\n        showBtn: true,\n      });\n\n      this.fetchImages();\n    }\n\n    if (\n      prevState.images.length !== this.state.images.length &&\n      snapshot !== null\n    ) {\n      window.scrollTo({\n        top: snapshot,\n        behavior: 'smooth',\n      });\n    }\n  }\n\n  fetchImages = () => {\n    const currentQuery = this.props.query;\n    const currentPage = this.state.page;\n\n    this.setState({ loading: true });\n\n    imageAPI\n      .fetchImage(currentQuery, currentPage)\n      .then(({ hits }) => {\n        if (hits.length === 0) {\n          return Promise.reject(\n            new Error(`Bad search query :( We have no ${currentQuery} images`),\n          );\n        }\n\n        if (hits.length < 12) {\n          this.setState({ showBtn: false });\n        }\n\n        this.setState(prevState => ({\n          images: [...prevState.images, ...hits],\n          page: prevState.page + 1,\n          status: 'resolved',\n        }));\n      })\n      .catch(error => this.setState({ error, status: 'rejected' }))\n      .finally(() => this.setState({ loading: false }));\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  handleImgClick = img => {\n    this.setState({ URL: img.dataset.source, ALT: img.alt });\n\n    this.toggleModal();\n  };\n\n  render() {\n    const {\n      images,\n      status,\n      error,\n      showBtn,\n      loading,\n      showModal,\n      URL,\n      ALT,\n    } = this.state;\n\n    if (status === 'idle') {\n      return (\n        <InitialView text=\"Enter in the searchbar the images you want to search\" />\n      );\n    }\n\n    if (status === 'pending') {\n      return <LoaderImg />;\n    }\n\n    if (status === 'rejected') {\n      return <ErrorView text={error.message} />;\n    }\n\n    if (status === 'resolved') {\n      return (\n        <>\n          <ImageGallery hits={images} onClick={this.handleImgClick} />\n          {showModal && (\n            <Modal largeImgUrl={URL} imgAlt={ALT} onClose={this.toggleModal} />\n          )}\n          {showBtn && !loading && <Button onBtnClick={this.fetchImages} />}\n          {loading && <LoaderImg />}\n        </>\n      );\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport Searchbar from './components/Searchbar';\nimport ImageInfo from './components/Views/ImageInfo';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    searchQuery: '',\n  };\n\n  handleFormSubmit = query => {\n    this.setState({\n      searchQuery: query,\n    });\n  };\n\n  render() {\n    const { searchQuery } = this.state;\n\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.handleFormSubmit} />\n        <ImageInfo query={searchQuery} />\n        <ToastContainer autoClose={2500} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__15qgG\",\"SearchForm\":\"Searchbar_SearchForm__3ebx8\",\"button\":\"Searchbar_button__1_NAg\",\"buttonLabel\":\"Searchbar_buttonLabel__Jd5E-\",\"SearchInput\":\"Searchbar_SearchInput__1tBhR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__29_GL\",\"GalleryItem\":\"ImageGallery_GalleryItem__3LkMY\",\"GalleryItemImage\":\"ImageGallery_GalleryItemImage__aRxPH\"};"],"sourceRoot":""}