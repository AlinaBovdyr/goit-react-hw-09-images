{"version":3,"sources":["components/Modal/Modal.module.css","components/ErrorView/ErrorView.module.css","components/InitialView/InitialView.module.css","components/Button/Button.module.css","components/Loader/Loader.module.css","components/Searchbar/Searchbar.module.css","components/Searchbar/Searchbar.js","services/searchImgApi.js","components/InitialView/InitialView.js","components/ErrorView/error.jpeg","components/ErrorView/ErrorView.js","components/ImageGallery/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Loader/Loader.js","components/Modal/Modal.js","components/Views/ImageInfo.js","App.js","index.js","components/ImageGallery/ImageGallery.module.css"],"names":["module","exports","Searchbar","onSubmit","useState","searchQuery","setSearchQuery","className","s","SearchForm","event","preventDefault","trim","toast","error","type","button","buttonLabel","SearchInput","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","BASE_URL","KEY","api","fetchImage","searchImg","page","searchParams","URLSearchParams","q","image_type","orientation","per_page","key","url","fetch","then","response","ok","json","Promise","reject","Error","InitialView","text","ErrorView","errorImg","src","errorImage","alt","errorMessage","ImageGalleryItem","largeImageURL","description","onImgClick","GalleryItem","data-source","GalleryItemImage","onClick","e","ImageGallery","hits","map","id","webformatURL","tags","Button","onBtnClick","LoaderImg","loader","color","height","width","timeout","modalRoot","document","querySelector","Modal","handleKeyDown","code","props","onClose","handleBackdropClick","target","window","addEventListener","this","removeEventListener","largeImgUrl","imgAlt","createPortal","overlay","modal","image","Component","ImageInfo","query","images","setImages","status","setStatus","setPage","setError","showBtn","setShowBtn","loading","setLoading","showModal","setShowModal","setAlt","setUrl","useEffect","fetchImages","imageAPI","length","prevImages","prevPage","catch","message","finally","toggleModal","Loader","img","dataset","source","App","setQuery","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4ada6c6a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__mPBGH\",\"modal\":\"Modal_modal__1cJ3i\",\"image\":\"Modal_image__XidPK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorMessage\":\"ErrorView_errorMessage__18AlQ\",\"errorImg\":\"ErrorView_errorImg__3c1QF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"InitialView_text__38yqg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__206U4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__3hoML\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__15qgG\",\"SearchForm\":\"Searchbar_SearchForm__3ebx8\",\"button\":\"Searchbar_button__1_NAg\",\"buttonLabel\":\"Searchbar_buttonLabel__Jd5E-\",\"SearchInput\":\"Searchbar_SearchInput__1tBhR\"};","import React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport s from './Searchbar.module.css';\n\nexport default function Searchbar({onSubmit}) {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleInputChange = event => {\n    setSearchQuery(event.currentTarget.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (searchQuery.trim() === '') {\n      return toast.error('Please, enter your search query!');\n    }\n\n    onSubmit(searchQuery);\n    setSearchQuery('');\n  };\n\n  return (\n      <header className={s.Searchbar}>\n        <form className={s.SearchForm} onSubmit={handleSubmit}>\n          <button type=\"submit\" className={s.button}>\n            <span className={s.buttonLabel}>Search</span>\n          </button>\n\n          <input\n            className={s.SearchInput}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={searchQuery}\n            onChange={handleInputChange}\n          />\n        </form>\n      </header>\n    );\n};","const BASE_URL = 'https://pixabay.com/api/';\nconst KEY = '19151711-be14d41e7a0bdcd70a93cb54b';\n\nfunction fetchImage(searchImg, page = 0) {\n  const searchParams = new URLSearchParams({\n    q: searchImg,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    page: page,\n    per_page: 12,\n    key: KEY,\n  });\n\n  const url = `${BASE_URL}?${searchParams}`;\n\n  return fetch(url).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject(\n      new Error(`Bad search query :( We have no ${searchImg} images`),\n    );\n  });\n}\n\nconst api = { fetchImage };\nexport default api;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './InitialView.module.css';\n\nconst InitialView = ({ text }) => {\n  return <p className={s.text}>{text}</p>;\n};\n\nInitialView.propTypes = {\n  text: PropTypes.string,\n};\n\nexport default InitialView;\n","export default __webpack_public_path__ + \"static/media/error.68e486b0.jpeg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport errorImage from './error.jpeg';\nimport s from './ErrorView.module.css';\n\nconst ErrorView = ({ text }) => {\n  return (\n    <>\n      <img className={s.errorImg} src={errorImage} alt=\"sadcat\" />\n      <p className={s.errorMessage}>{text}</p>\n    </>\n  );\n};\n\nErrorView.propTypes = {\n  text: PropTypes.string,\n};\n\nexport default ErrorView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ImageGallery.module.css';\n\nconst ImageGalleryItem = ({ url, largeImageURL, description, onImgClick }) => {\n  return (\n    <li className={s.GalleryItem}>\n      <img\n        src={url}\n        data-source={largeImageURL}\n        alt={description}\n        className={s.GalleryItemImage}\n        onClick={e => onImgClick(e.currentTarget)}\n      />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  url: PropTypes.string,\n  largeImageURL: PropTypes.string,\n  description: PropTypes.string,\n  onImgClick: PropTypes.func,\n};\n\nexport default ImageGalleryItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImageGalleryItem from './ImageGalleryItem';\nimport s from './ImageGallery.module.css';\n\nconst ImageGallery = ({ hits, onClick }) => {\n  return (\n    <ul className={s.ImageGallery}>\n      {hits.map(({ id, webformatURL, largeImageURL, tags }) => {\n        return (\n          <ImageGalleryItem\n            key={id}\n            url={webformatURL}\n            largeImageURL={largeImageURL}\n            description={tags}\n            onImgClick={onClick}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nImageGallery.propTypes = {\n  hits: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default ImageGallery;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nconst Button = ({ onBtnClick }) => {\n  return (\n    <button type=\"button\" className={s.Button} onClick={onBtnClick}>\n      Load more\n    </button>\n  );\n};\n\nButton.propTypes = {\n  onBtnClick: PropTypes.func,\n};\n\nexport default Button;\n","import React from 'react';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Loader from 'react-loader-spinner';\nimport s from './Loader.module.css';\n\nconst LoaderImg = () => {\n  return (\n    <Loader\n      className={s.loader}\n      type=\"ThreeDots\"\n      color=\"#b53f97\"\n      height={100}\n      width={200}\n      timeout={3000}\n    />\n  );\n};\n\nexport default LoaderImg;\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const { largeImgUrl, imgAlt } = this.props;\n\n    return createPortal(\n      <div className={s.overlay} onClick={this.handleBackdropClick}>\n        <div className={s.modal}>\n          <img className={s.image} src={largeImgUrl} alt={imgAlt} />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport imageAPI from '../../services/searchImgApi';\nimport InitialView from '../InitialView';\nimport ErrorView from '../ErrorView';\nimport ImageGallery from '../ImageGallery';\nimport Button from '../Button';\nimport LoaderImg from '../Loader';\nimport Modal from '../Modal';\n\nexport default function ImageInfo({query}) {\n  const [images, setImages] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const [page, setPage] = useState(1);\n  const [error, setError] = useState(null);\n  const [showBtn, setShowBtn] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [alt, setAlt] = useState('');\n  const [url, setUrl] = useState('');\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    };\n\n    fetchImages();\n  }, [query]);\n\n  const fetchImages = () => {\n    setLoading(true);\n\n    imageAPI\n      .fetchImage(query, page)\n      .then(({ hits }) => {\n        if (hits.length === 0) {\n          return Promise.reject(\n            new Error(`Bad search query :( We have no ${query} images`),\n          );\n        };\n\n        if (hits.length < 12) {\n          setShowBtn(false);\n        };\n\n        setImages(prevImages => [...prevImages, ...hits]);\n        setPage(prevPage => prevPage + 1);\n        setStatus('resolved');\n      })\n      .catch(error => {\n        setError(error.message);\n        setStatus('rejected');\n      })\n      .finally(() => setLoading(false));\n  }\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const handleImgClick = img => {\n    setAlt(img.alt);\n    setUrl(img.dataset.source);\n\n    toggleModal();\n  };\n  \n  if (status === 'idle') {\n      return (\n        <InitialView text=\"Enter in the searchbar the images you want to search\" />\n      );\n    }\n\n    if (status === 'pending') {\n      return <LoaderImg />;\n    }\n\n    if (status === 'rejected') {\n      return <ErrorView text={error} />;\n    }\n\n    if (status === 'resolved') {\n      return (\n        <>\n          <ImageGallery hits={images} onClick={handleImgClick} />\n          {showModal && (\n            <Modal largeImgUrl={url} imgAlt={alt} onClose={toggleModal} />\n          )}\n          {showBtn && !loading && <Button onBtnClick={fetchImages} />}\n          {loading && <LoaderImg />}\n        </>\n      );\n    }\n}\n\n// export default class ImageInfo extends Component {\n//   state = {\n//     images: [],\n//     status: 'idle',\n//     error: null,\n//     page: 1,\n//     showBtn: true,\n//     loading: false,\n//     showModal: false,\n//     URL: '',\n//     ALT: '',\n//   };\n\n//   getSnapshotBeforeUpdate(prevProps, prevState) {\n//     const prevImages = prevState.images;\n\n//     if (prevImages.length > 0) {\n//       const listRef = document.querySelector('ul');\n//       return listRef.clientHeight;\n//     }\n\n//     return null;\n//   }\n\n//   componentDidUpdate(prevProps, prevState, snapshot) {\n//     const prevQuery = prevProps.query;\n//     const currentQuery = this.props.query;\n\n//     if (prevQuery !== currentQuery) {\n//       prevState.page = 1;\n//       this.setState({\n//         status: 'pending',\n//         images: [],\n//         showBtn: true,\n//       });\n\n//       this.fetchImages();\n//     }\n\n//     if (\n//       prevState.images.length !== this.state.images.length &&\n//       snapshot !== null\n//     ) {\n//       window.scrollTo({\n//         top: snapshot,\n//         behavior: 'smooth',\n//       });\n//     }\n//   }\n\n  // fetchImages = () => {\n  //   const currentQuery = this.props.query;\n  //   const currentPage = this.state.page;\n\n  //   this.setState({ loading: true });\n\n  //   imageAPI\n  //     .fetchImage(currentQuery, currentPage)\n  //     .then(({ hits }) => {\n  //       if (hits.length === 0) {\n  //         return Promise.reject(\n  //           new Error(`Bad search query :( We have no ${currentQuery} images`),\n  //         );\n  //       }\n\n  //       if (hits.length < 12) {\n  //         this.setState({ showBtn: false });\n  //       }\n\n  //       this.setState(prevState => ({\n  //         images: [...prevState.images, ...hits],\n  //         page: prevState.page + 1,\n  //         status: 'resolved',\n  //       }));\n  //     })\n  //     .catch(error => this.setState({ error, status: 'rejected' }))\n  //     .finally(() => this.setState({ loading: false }));\n  // };\n\n  // toggleModal = () => {\n  //   this.setState(({ showModal }) => ({\n  //     showModal: !showModal,\n  //   }));\n  // };\n\n  // handleImgClick = img => {\n  //   this.setState({ URL: img.dataset.source, ALT: img.alt });\n\n  //   this.toggleModal();\n  // };\n\n//   render() {\n//     const {\n//       images,\n//       status,\n//       error,\n//       showBtn,\n//       loading,\n//       showModal,\n//       URL,\n//       ALT,\n//     } = this.state;\n\n    // if (status === 'idle') {\n    //   return (\n    //     <InitialView text=\"Enter in the searchbar the images you want to search\" />\n    //   );\n    // }\n\n    // if (status === 'pending') {\n    //   return <LoaderImg />;\n    // }\n\n    // if (status === 'rejected') {\n    //   return <ErrorView text={error.message} />;\n    // }\n\n    // if (status === 'resolved') {\n    //   return (\n    //     <>\n    //       <ImageGallery hits={images} onClick={this.handleImgClick} />\n    //       {showModal && (\n    //         <Modal largeImgUrl={URL} imgAlt={ALT} onClose={this.toggleModal} />\n    //       )}\n    //       {showBtn && !loading && <Button onBtnClick={this.fetchImages} />}\n    //       {loading && <LoaderImg />}\n    //     </>\n    //   );\n    // }\n//   }\n// }\n","import React, { useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport Searchbar from './components/Searchbar';\nimport ImageInfo from './components/Views/ImageInfo';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\n\nexport default function App() {\n  const [query, setQuery] = useState('');\n\n  const handleFormSubmit = searchQuery => {\n    setQuery(searchQuery);\n  };\n\n  return (\n      <div className=\"App\">\n        <Searchbar onSubmit={handleFormSubmit} />\n        <ImageInfo query={query} />\n        <ToastContainer autoClose={2500} />\n      </div>\n    );\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__29_GL\",\"GalleryItem\":\"ImageGallery_GalleryItem__3LkMY\",\"GalleryItemImage\":\"ImageGallery_GalleryItemImage__aRxPH\"};"],"sourceRoot":""}